using System;

namespace HeiganDance
{
    class Program
    {
        static void Main(string[] args)
        {
            double heiganDamage = double.Parse(Console.ReadLine());
            int rows = 15;
            int cols = 15;
            int playerRow = rows / 2;
            int playerCol = cols / 2;
            double heiganPower = 3000000d;
            int playerPower = 18500;
            bool hasCloud = false;
            string plague = "";

            while (true)
            {
                heiganPower -= heiganDamage;
                if (hasCloud == true)
                {
                    playerPower -= 3500;
                    hasCloud = false;
                }

                if (playerPower <= 0 || heiganPower <= 0)
                {
                    break;
                }

                var line = Console.ReadLine().Split(new[] { " " }, StringSplitOptions.RemoveEmptyEntries);
                plague = line[0];
                int rowIndex = int.Parse(line[1]);
                int colIndex = int.Parse(line[2]);

                if (!IsInRange(playerRow, playerCol, rowIndex, colIndex))
                {
                    if (CanHeEscape(playerRow, playerCol, rowIndex, colIndex))
                    {
                        if (playerRow > 0 && playerRow - 1 < rowIndex - 1)
                        {
                            playerRow -= 1;
                        }
                        else if (playerCol + 1 < 15 && playerCol + 1 > colIndex + 1)
                        {
                            playerCol += 1;
                        }
                        else if (playerRow + 1 < 15 && playerRow + 1 > rowIndex + 1)
                        {
                            playerRow += 1;
                        }
                        else if (playerCol > 0 && playerCol - 1 < colIndex - 1)
                        {
                            playerCol -= 1;
                        }
                    }
                    else
                    {
                        switch (plague)
                        {
                            case "Cloud":
                                playerPower -= 3500;
                                hasCloud = true;
                                break;
                            case "Eruption":
                                playerPower -= 6000;
                                break;
                        }
                    }
                }

                if (playerPower <= 0)
                {
                    break;
                }
            }

            if (heiganPower <= 0)
            {
                Console.WriteLine("Heigan: Defeated!");
            }
            else
            {
                Console.WriteLine($"Heigan: {heiganPower:f2}");
            }

            if (playerPower <= 0)
            {
                Console.WriteLine("Player: Killed by {0}", plague == "Cloud" ? "Plague Cloud" : "Eruption");
            }
            else
            {
                Console.WriteLine($"Player: {playerPower}");
            }

            Console.WriteLine($"Final position: {playerRow}, {playerCol}");
        }

        private static bool CanHeEscape(int playerRow, int playerCol, int rowIndex, int colIndex)
        {
            return (playerRow - 1 < rowIndex - 1 && playerRow > 0) ||
                   (playerRow + 1 > rowIndex + 1 && playerRow < 14) ||
                   (playerCol - 1 < colIndex - 1 && playerCol > 0) ||
                   (playerCol + 1 > colIndex + 1 && playerCol < 14);
        }

        private static bool IsInRange(int playerRow, int playerCol, int rowIndex, int colIndex)
        {
            return (playerRow < rowIndex - 1 || playerRow > rowIndex + 1 || playerCol < colIndex - 1 ||
                    playerCol > colIndex + 1);
        }
    }
}
